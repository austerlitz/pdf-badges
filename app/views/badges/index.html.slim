h1.page-title
  => icon(:fa, :'file-pdf')
  | Pdf badges
  small.text-muted< make personalized pdf files from a template and a csv file

.lead.card-body
  h4 Short instructions
  p Upload two files: an image or a pdf file (one-page) that should be used as a background and a csv file with the data.
    In the Template field modify the text template which will be rendered using the data file into each separate pdf page.

  p Just play around with the template and settings to see what comes out.


.card
  .card-header Let's generate some pdfs
  .card-body
    = bootstrap_form_for @badge, url: :badges do |f|
      .form-row
        / .col-12= f.text_field :title
        .col-6
          = f.file_field :background, layout: :horizontal, label_col: 'col-3', control_col: 'col-9', help: 'any image or pdf file that should be used as a background'
          = f.file_field :data, layout: :horizontal, label_col: 'col-3', control_col: 'col-9', help: 'csv file with first row as column names'
          .form-row
            .col-8= f.select :font, PdfTemplate::DEFAULT_FONTS.keys.zip(PdfTemplate::DEFAULT_FONTS.keys), help: 'default font for all the text. Can be altered in the template.'
            .col-4= f.number_field :font_size
          .form-row
            .col= f.select :text_align, %w(left right center justify)
            .col= f.select :valign, %w(top center bottom)
        .col-6
          = f.text_area :template, class: 'text-monospace', value: PdfTemplate::DEFAULT_TEMPLATE, rows: 8, help: 'Refer to <a href="http://prawnpdf.org/manual.pdf">prawn-pdf documentation</a> for syntax. Use csv column names as variable names in double curly brackets ("{{}}")'.html_safe
      .form-row
        .col-3
          = f.form_group :page_layout, label: {text: 'Page layout'}
            = f.radio_button :page_layout, :portrait, label: 'Portrait'
            = f.radio_button :page_layout, :landscape, label: 'Landscape'
        .col-3
          - paper_sizes = PDF::Core::PageGeometry::SIZES.keys
          = f.select :paper_size, paper_sizes.zip(paper_sizes), include_blank: true
          = f.text_field :custom_paper_size, placeholder: 'custom size: 210, 297', help: 'as two something-separated values in mm: Width, Height'
        .col-6
          = f.text_field :margins, help: 'top, right, bottom, left -- all in mm'
      .form-row
        .col-6
          = f.check_box :debug, custom: :switch
          small.text-muted.form-text adds stroke axis to help understand pdf geometry
      .form-row.mt-2
        .col-12= f.submit 'Generate', name: nil

javascript:
    $('.custom-file-input').change(function () {
        $(this).siblings('.custom-file-label').text(this.value);
    });